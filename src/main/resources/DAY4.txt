Todo 웹 프로그램

- 목록화면(list) - GET  TodoReadController
  목록화면은 GET 방식으로 조회하는 화면
  등록, 수정, 삭제 후에도 결과를 확인할 수 있는 화면

- 등록화면(Register)  - GET
  GET 이동하기 때문에 등록 화면 register.jsp 페이지 이동

- 등록화면(Register)  - POST
  입력데이터들을 POST 방식으로 서버 전송  ==> 별도의 Controller 가 추가되야 한다. TodoRegisterController
  처리한 후 Redirect 방식으로 다시 목록페이지로 돌아간다.
  - 목록페이지로 돌아간 후 새롭게 등록된 글이 반영되어 목록을 보여줘야 한다.

- 조회화면 (read) - GET 방식으로 동작 설계  목록화면에서 특정 Todo 글번호를 누르면 동작하도록 설계  TodoReadController

- 수정/삭제 (remove / delete) - GET 방식 설계 (해당 페이지로 이동)

- 수정/삭제 화면에서는 POST 방식으로 수정, 삭제 진행할 수 있도록 버튼을 추가    (ToModifyController, TodoRemoveController)

- 수정화면(modify) - POST => 목록화면(list)로 redirect

- 삭제화면(delete) - POST => 목록화면(list) redirect



--------------------------------------------------------------------------
TodoDTO => 일 하나을 저장하는 데이터 객체

서비스 객체 : 기능들의 묶음 (프로그래밍 구현해야하는 기능들의 실체 처리를 담당하는 객체) - CRUD (등록,조회,삭제,갱신) 모아서
서비스객체에 구현된다. ==> DAO

Todo 라는 대상으로 담당하는 서비스객체  => TodoService


----------------------------------------------------------------------------
TodoService ==> ENUM 타입으로 클래스를 작성하는 이유
- 정해진 수만큼 객체를 생성할 수 있다.

  TodoService.INSTANCE  (한개의 서비스 객체를 사용하겠다.)===> 싱글턴패턴 을 적용하여 서비스 하겠다. (singleton Pattern)

  여러개의 컨트롤러들이 TodoService 객체를 통해서 원하는 데이터를 주고받는 구조로 만들기 위해 객체를 하나만 생성하였다.

-----------------------------------------------------------------------------------------------------------------
컨트롤러에서 모델을 처리해야 한다.

- 화면에 필요한 데이터를 처리하려면 컨트롤러가 서비스 객체로 부터 데이터를 받아서 ,
  getList() 결과를 받아서, JSP까지 전달해서 JSP에서 결과를 표현

  HttpServletRequest 객체의 setAttribute()를 이용해서 결과를 저장하고 JSP에서 이결과를 꺼내어 출력하는 구현을 해주어야 한다.

----------------------------------------------------------------------------------------
EL 은 JSP에서 간단한 표현식(expression) 이용해서 데이터 출력만을 담당한다.
반복문이나 제어문을 JSP에서 사용하려면 JSTL(JavaServer Pages Standard Tag Library)  ==> statement 문이라 명칭한다.














